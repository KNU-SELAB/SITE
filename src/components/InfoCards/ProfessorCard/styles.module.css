/* src/components/InfoCards/ProfessorCard/styles.module.css */
.professorCard {
  align-items: stretch;
  background-color: var(--homepage-card-bg);
  border: 1px solid var(--homepage-card-border-color);
  border-radius: 12px;
  box-shadow: var(--homepage-card-actual-shadow);
  color: var(--info-card-text-color);
  height: 100%;
  min-height: var(--info-card-min-height);
  display: flex;
  overflow: hidden;
  position: relative; /* 호버 텍스트의 absolute 포지셔닝 기준점 */
  align-items: stretch;
  flex-direction: row;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              border-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing-function),
              color var(--theme-transition-duration) var(--theme-transition-timing-function),
              transform 0.3s ease-out;

              
}

/* Link로 감싸졌을 때 기본 스타일 제거 및 커서 변경 */
.clickableCard {
  text-decoration: none; /* 링크 밑줄 제거 */
  cursor: pointer;
}
.clickableCard:hover { /* 카드 호버 시 기본 효과 */
  transform: translateY(-5px);
  box-shadow: var(--homepage-card-actual-shadow-hover);
  border-color: var(--knu-deep-blue-text);
  text-decoration: none; /* 호버 시에도 링크 밑줄 제거 */
}

.photoArea {
    flex: 0 0 35%;
  width: 100%;
    height: auto;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  /* 모바일: 사진 하단 흐리게 - 더 좁고 자연스럽게 */
    -webkit-mask-image: linear-gradient(to right, black 85%, transparent 100%);
    mask-image: linear-gradient(to right, black 85%, transparent 100%);
  transition: filter 0.3s ease-in-out; /* 호버 시 어두워지는 효과 */
}

.noPhotoText {
  font-size: 0.9rem;
  color: var(--ifm-color-emphasis-700);
}

.infoSection {
  padding: var(--info-card-padding-vertical) var(--info-card-padding-horizontal);
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  background-color: var(--homepage-card-bg); /* 카드 배경과 동일하게 */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              filter 0.3s ease-in-out; /* 호버 시 어두워지는 효과 */
  position: relative; /* 자식 요소가 absolute일 경우 z-index 컨텍스트 */
  z-index: 1; /* 호버 텍스트보다 아래에 있도록 */
  
    flex: 1;
}
/* 호버 시 나타날 텍스트 컨테이너 (상태 기반으로 변경) */
.hoverLinkTextContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--professor-card-hover-overlay-bg);
  opacity: 0; /* 초기 상태: 숨김 */
  visibility: hidden; /* 초기 상태: 숨김 */
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  z-index: 2; /* 다른 내용 위에 표시 */
  pointer-events: none;
  border-radius: inherit; /* professorCard의 radius 상속 */
}

.hoverLinkText {
  color: var(--knu-deep-blue-text);
  font-size: 2.25rem;
  font-weight: 700;
  padding: 1rem;
  text-align: center;
  text-shadow: 0 1px 3px rgba(0,0,0,0.2);
}

/* JavaScript에 의해 .overlayActive 클래스가 .professorCard에 추가되었을 때만 오버레이 및 블러 효과 적용 */
.professorCard.overlayActive .hoverLinkTextContainer {
  opacity: 1;
  visibility: visible;
}

.professorCard.overlayActive .photoArea,
.professorCard.overlayActive .infoSection {
  filter: blur(3px); /* 블러 효과만 적용 */
}


/* --- 나머지 스타일 (.name, .title, .contactInfo 등) --- */
/* 이전 답변의 ProfessorCard 내부 요소 스타일들을 여기에 그대로 사용합니다. */
/* (이미 --info-card-* 변수들을 잘 활용하고 있음) */
.name {
  color: var(--info-card-title-color);
  font-size: var(--info-card-title-font-size);
  font-weight: var(--info-card-title-font-weight);
  margin-top: 0;
  margin-bottom: 0.25rem;
}
.title {
  font-size: 0.95rem;
  color: var(--ifm-font-color-secondary);
  margin-bottom: var(--info-card-title-margin-bottom);
  font-weight: 500;
}
.contactInfo { margin-bottom: 1rem; }
.contactInfo p {
  margin-bottom: 0.4rem;
  font-size: var(--info-card-text-font-size);
  line-height: var(--info-card-text-line-height);
  display: flex;
  align-items: center;
  gap: 0.5em;
}
.contactInfo p a {
  color: var(--ifm-link-color);
  text-decoration: none;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}
.contactInfo p a:hover {
  text-decoration: underline;
  color: var(--ifm-link-hover-color);
}
.detailSection { margin-top: 1rem; }
.detailSection:last-of-type { flex-grow: 1; } /* 이 부분은 infoSection에 flex-grow가 있으므로 큰 영향 없을 수 있음 */
.detailTitle {
  font-size: var(--info-card-subtitle-font-size);
  color: var(--info-card-subtitle-color);
  font-weight: var(--info-card-subtitle-font-weight);
  margin-bottom: var(--info-card-subtitle-margin-bottom);
  border-bottom: 1px solid var(--ifm-color-emphasis-300);
  padding-bottom: 0.3rem;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function),
              border-bottom-color var(--theme-transition-duration) var(--theme-transition-timing-function);
}
.detailSection ul {
  list-style-type: disc;
  padding-left: 1.25rem;
  margin: 0;
  font-size: var(--info-card-text-font-size);
  line-height: var(--info-card-text-line-height);
}
.detailSection ul li { margin-bottom: var(--info-card-list-item-margin-bottom); }
.interestsList {
  list-style-type: none;
  padding-left: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 0.6rem;
}
.interestItem {
  background-color: var(--info-card-tag-bg);
  color: var(--info-card-tag-text-color);
  padding: var(--info-card-tag-padding);
  border-radius: var(--info-card-tag-border-radius);
  font-size: var(--info-card-tag-font-size);
  border: var(--info-card-tag-border);
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              color var(--theme-transition-duration) var(--theme-transition-timing-function),
              border-color var(--theme-transition-duration) var(--theme-transition-timing-function);
}
