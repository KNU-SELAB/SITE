/* src/pages/index.module.css */

/* --- Hero Section --- */
.heroBanner {
  background-color: var(--knu-deep-blue-bg);
  color: var(--homepage-hero-title-text); /* Hero 내부 기본 텍스트 색상 */
  padding: 5rem 0;
  text-align: center;
  position: relative;
  overflow: hidden;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.heroTitle {
  font-size: 3.8rem;
  margin-bottom: 1.2rem;
  color: var(--hero-title-text-color); /* custom.css에서 정의됨 */
  font-weight: 700;
  letter-spacing: -0.01em;
  position: relative; /* ::after 가상 요소의 기준점 */
  display: inline-block; /* ::after가 텍스트 너비에 맞게 그려지도록 */
  padding-bottom: 0.3em; /* 밑줄이 그려질 공간 확보 */
  cursor: default;

  /* 텍스트 자체의 등장 애니메이션 (스크롤 애니메이션과 연동) */
  /* animate-on-scroll 클래스에 의해 초기 상태가 설정됨 (아래 참고) */
  /* isVisible 클래스가 추가될 때 아래 값으로 변경됨 */
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function), /* 테마 변경시 색상 전환 */
              opacity 0.6s ease-out, /* 텍스트 등장 애니메이션 */
              transform 0.6s ease-out; /* 텍스트 등장 애니메이션 */
}

/* 스크롤 애니메이션을 위한 초기 상태 (animate-on-scroll 클래스에 의해 이미 적용됨) */
/* .animate-on-scroll 클래스에 opacity: 0, transform: translateY(40px) 등이 정의되어 있음 */
/* .heroTitle.isVisible {} 와 같이 isVisible 상태를 별도로 정의할 필요는 없음 */
/* animate-on-scroll 과 isVisible 스타일이 이미 전역적으로 또는 이 파일 하단에 정의되어 있기 때문 */


/* 밑줄 애니메이션을 위한 가상 요소 */
.heroTitle::after {
  content: '';
  position: absolute;
  bottom: 0; /* 텍스트 바로 아래 (padding-bottom 고려) */
  left: 0;
  width: 100%; /* 최종 너비는 텍스트 전체 */
  height: 3px; /* 밑줄 두께 */
  background-color: var(--knu-bright-blue-accent); /* 밑줄 색상 (테마 반응) */
  
  transform: scaleX(0); /* 초기에는 너비가 0 (왼쪽에서 시작) */
  transform-origin: left; /* 왼쪽에서 오른쪽으로 그려지는 효과 */
  
  /* .isVisible 상태일 때 애니메이션 실행 */
  transition: transform 0.7s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* 스크롤 되어 .isVisible 클래스가 .heroTitle에 추가될 때 ::after 애니메이션 실행 */
.heroTitle.isVisible::after {
  transform: scaleX(1); /* 너비를 100%로 확장 */
  transition-delay: 0.5s; /* 텍스트가 나타난 후 0.5초 뒤에 밑줄 애니메이션 시작 */
}


.heroSubtitle {
  color: var(--homepage-hero-subtitle-text);
  opacity: 1; /* 이전 답변에서 수정됨 */
  font-weight: 300;
  font-size: 1.25rem;
  line-height: 1.8;
  max-width: 720px;
  margin: 0 auto 2.8rem auto;
  /* 텍스트 자체의 등장 애니메이션 (스크롤 애니메이션과 연동) */
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function),
              opacity 0.6s ease-out,
              transform 0.6s ease-out;
}

/* ... (스크롤 애니메이션을 위한 .animate-on-scroll, .isVisible, .delay* 클래스 스타일은 */
/* 이전 답변의 내용을 그대로 사용합니다. 해당 스타일들이 이 효과를 작동시킵니다.) ... */

/* 예시: 스크롤 애니메이션 스타일 (이미 존재해야 함) */
.animate-on-scroll {
  opacity: 0;
  transform: translateY(40px); /* 기본값, 필요시 조절 */
  /* transition은 각 요소에 개별적으로 정의된 것을 따르거나, 여기서 기본값 설정 가능 */
}

.animate-on-scroll.isVisible {
  opacity: 1;
  transform: translateY(0);
}

.animate-on-scroll.delay1.isVisible { transition-delay: 0.1s !important; } /* !important는 필요에 따라, 기본 transition에 delay가 없을때 */
.animate-on-scroll.delay2.isVisible { transition-delay: 0.3s !important; } /* 텍스트 나오고 -> 부제목 나오고 */
.animate-on-scroll.delay3.isVisible { transition-delay: 0.5s !important; } /* -> 버튼 나오고 */
/* heroTitle::after의 transition-delay와 겹치지 않도록 조정하거나,
   heroTitle의 텍스트 등장 후 밑줄이 나오도록 시간차를 잘 설정합니다. */

/* .heroTitle.isVisible::after 의 transition-delay 를 부모의 등장 이후로 조정 */
/* 예를 들어, .heroTitle이 styles.delay1 (0.1s)로 등장한다면, ::after는 0.1s (텍스트 등장시간) + 0.5s (추가지연) = 0.6s 후에 시작 */
.heroTitle.delay1.isVisible::after {
  transition-delay: 0.7s; /* (텍스트 등장 애니메이션 시간 0.6s) + (부모 등장 지연 0.1s) 이후 */
}


/* .heroTitle {
  font-size: 3.5rem;
  margin-bottom: 1rem;
  color: var(--homepage-hero-title-text);
  font-weight: 700;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.heroSubtitle {
  color: var(--homepage-hero-subtitle-text);
  opacity: 1; 
  font-weight: 300;
  font-size: 1.25rem;
  line-height: 1.8;
  max-width: 12880px;
  word-break: keep-all;
  text-align: left;
  margin: 0 auto 2.8rem auto;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
} */

.buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.heroButtonPrimary {
  background-color: var(--hero-btn-primary-bg);
  color: var(--homepage-text-on-hero-accent-button);
  border: 2px solid var(--hero-btn-primary-border);
  padding: 0.8rem 2.2rem;
  font-size: 1.1rem;
  font-weight: 600;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  /* 여러 속성에 대한 transition을 한 줄로 정의 */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              color var(--theme-transition-duration) var(--theme-transition-timing-function),
              border-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              transform 0.2s ease-out, /* 호버용 */
              filter 0.2s ease-in-out, /* 호버용 */
              box-shadow 0.2s ease-in-out; /* 호버용 */
}
.heroButtonPrimary:hover {
  filter: brightness(0.92);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

/* --- 공통 섹션 스타일 --- */
.sectionPadding {
  padding: 6rem 0;
}

.sectionHeader {
  display: flex;
  align-items: center;
  margin-bottom: 2.5rem;
  border-bottom: 2px solid var(--homepage-section-divider-color);
  padding-bottom: 1.25rem;
  transition: border-bottom-color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.sectionIcon {
  font-size: 3rem;
  margin-right: 1.5rem;
  color: var(--knu-deep-blue-text);
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function),
              transform 0.3s ease-out; /* 호버용 transform은 유지 */
}

.sectionHeader:hover .sectionIcon {
  transform: rotate(-10deg) scale(1.1);
}

.sectionTitle {
  font-size: 2.75rem;
  font-weight: 700;
  color: var(--knu-deep-blue-text);
  margin-bottom: 0;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

/* --- ResearchAreaSection 스타일 --- */
.researchAreaSection {
  background-color: var(--homepage-section-primary-bg);
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.researchAreaContent p {
  font-size: 1.15rem;
  line-height: 1.8;
  color: var(--homepage-text-secondary);
  margin-bottom: 1.75rem;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.researchAreaContent p:last-child {
  margin-bottom: 0;
}

/* --- RelatedTechnologiesSection 스타일 --- */
.relatedTechnologiesSection {
  background-color: var(--homepage-section-secondary-bg);
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.relatedTechIntro {
  font-size: 1.15rem; /* 연구 분야 본문과 동일한 폰트 크기 */
  line-height: 1.8; /* 연구 분야 본문과 동일한 줄 간격 */
  color: var(--homepage-text-secondary); /* 연구 분야 본문과 동일한 텍스트 색상 */
  margin-bottom: 2.5rem; /* 카드들과의 간격을 적절히 둠 (연구 분야 문단보다는 약간 더 둘 수 있음) */
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.researchAreaContent p {
  font-size: 1.15rem;
  line-height: 1.8;
  color: var(--homepage-text-secondary);
  margin-bottom: 1.75rem;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
  /* 여기에는 text-align, max-width 등의 제한이 없으므로 기본적으로 왼쪽 정렬, 전체 너비 사용 */
}

.techColumn {
  margin-bottom: 2.5rem;
  display: flex;
}

.techCard {
  background-color: var(--homepage-card-bg);
  border-radius: 12px;
  padding: 2.5rem 2.25rem;
  box-shadow: var(--homepage-card-actual-shadow);
  border: 1px solid var(--homepage-card-border-color);
  width: 100%;
  display: flex;
  flex-direction: column;
  /* 여러 속성에 대한 transition을 한 줄로 정의 */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              border-color var(--theme-transition-duration) var(--theme-transition-timing-function),
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing-function), /* 테마 전환 시 그림자도 바뀜 */
              transform 0.35s cubic-bezier(0.25, 0.8, 0.25, 1); /* 호버용 */
}

.techCard:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: var(--homepage-card-actual-shadow-hover);
  border-color: var(--knu-deep-blue-text); /* 호버 시 테두리 색상 */
}

.techCardTitle {
  font-size: 1.75rem;
  font-weight: 600;
  color: var(--knu-deep-blue-text);
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

.cardIcon {
  font-size: 2rem;
  margin-right: 1rem;
  color: var(--homepage-icon-accent-color);
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function),
              transform 0.3s ease-out; /* 호버용 transform은 유지 */
}

.techCard:hover .cardIcon {
  transform: scale(1.15) rotate(5deg);
}

.techCard p {
  font-size: 1.05rem;
  line-height: 1.7;
  color: var(--homepage-text-secondary);
  margin-bottom: 0;
  flex-grow: 1;
  transition: color var(--theme-transition-duration) var(--theme-transition-timing-function);
}

/* --- 스크롤 애니메이션 스타일 --- */
.animate-on-scroll {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 0.6s cubic-bezier(0.165, 0.84, 0.44, 1),
              transform 0.7s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition-delay: 0s;
}

.animate-on-scroll.isVisible {
  opacity: 1;
  transform: translateY(0);
}

.animate-on-scroll.delay1.isVisible { transition-delay: 0.1s; }
.animate-on-scroll.delay2.isVisible { transition-delay: 0.2s; }
.animate-on-scroll.delay3.isVisible { transition-delay: 0.3s; }
.animate-on-scroll.delay4.isVisible { transition-delay: 0.4s; }

/* --- 반응형 조정 --- */
@media screen and (max-width: 996px) {
  .sectionPadding { padding: 4.5rem 0; }
  .sectionTitle { font-size: 2.25rem; }
  .heroTitle { font-size: 2.8rem; }
  .techCardTitle { font-size: 1.5rem; }
}

@media screen and (max-width: 768px) {
  .sectionPadding { padding: 3.5rem 0; }
  .sectionIcon { font-size: 2.25rem; margin-right: 1rem; }
  .sectionTitle { font-size: 2rem; }
  .heroTitle { font-size: 2.5rem; }
  .heroSubtitle { font-size: 1.1rem; }

  .researchAreaContent p,
  .relatedTechIntro,
  .techCard p {
    font-size: 1rem;
  }
  .techCardTitle { font-size: 1.35rem; }
  .cardIcon { font-size: 1.6rem; }
  .techCard { padding: 2rem 1.5rem; }
}